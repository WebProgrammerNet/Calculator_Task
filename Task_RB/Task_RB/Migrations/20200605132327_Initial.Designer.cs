// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task_RB.DAL;

namespace Task_RB.Migrations
{
    [DbContext(typeof(CalcDbContext))]
    [Migration("20200605132327_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Task_RB.Models.CalcFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Insert_Date")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("CalcFunctions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Insert_Date = new DateTimeOffset(new DateTime(2020, 6, 5, 13, 23, 26, 493, DateTimeKind.Unspecified).AddTicks(4385), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            Insert_Date = new DateTimeOffset(new DateTime(2020, 6, 5, 13, 23, 26, 493, DateTimeKind.Unspecified).AddTicks(7571), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            Insert_Date = new DateTimeOffset(new DateTime(2020, 6, 5, 13, 23, 26, 493, DateTimeKind.Unspecified).AddTicks(7645), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            Insert_Date = new DateTimeOffset(new DateTime(2020, 6, 5, 13, 23, 26, 493, DateTimeKind.Unspecified).AddTicks(7653), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Task_RB.Models.CalcResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalcFunctionId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Insert_Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.HasIndex("CalcFunctionId");

                    b.ToTable("CalcResults");
                });

            modelBuilder.Entity("Task_RB.Models.CalcResult", b =>
                {
                    b.HasOne("Task_RB.Models.CalcFunction", "CalcFunction")
                        .WithMany("CalcResults")
                        .HasForeignKey("CalcFunctionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
